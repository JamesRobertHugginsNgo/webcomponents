{"version":3,"sources":["scripts/essentials/mutationobserver.min.js"],"names":["mutationObserver","MutationObserver","mutationsList","window","hasOwnProperty","eventProperties","Object","defineProperties","forEach","mutationRecord","targetNode","target","type","addedNodes","node","trigger","nodeName","toUpperCase","nodeType","Node","ELEMENT_NODE","removedNodes","attributeName","observe","document","body","attributes","childList","subtree","createElement","tagName","options","element","call","this"],"mappings":"AAAA,aAKA,IAAIA,iBAAmB,IAAIC,iBAAiB,SAAUC,IAChDC,OAAOC,eAAe,YAAcC,iBACxCC,OAAOC,iBAAiBJ,OAAQE,iBAG7BF,OAAOC,eAAe,YACzBF,EAAcM,QAAQ,SAAUC,GAC/B,IAAIC,EAAaD,EAAeE,OACJ,cAAxBF,EAAeG,MAClBH,EAAeI,WAAWL,QAAQ,SAAUM,GAC3CX,OAAOY,QAAQ,CAAC,CAAC,uBAAyBD,EAAKE,SAASC,cAAeH,GAAO,CAAC,iCAAmCJ,EAAWM,SAASC,cAAgB,mBAAqBP,EAAWM,SAASC,cAAgB,IAAMH,EAAKE,SAASC,cAAeP,EAAYI,KAE1PA,EAAKI,WAAaC,KAAKC,cAC1BjB,OAAOY,QAAQ,CAAC,CAAC,6BAA+BD,EAAKE,SAASC,cAAeH,GAAO,CAAC,uCAAyCJ,EAAWM,SAASC,cAAgB,sBAAwBP,EAAWM,SAASC,cAAgB,IAAMH,EAAKE,SAASC,cAAeP,EAAYI,OAI/QL,EAAeY,aAAab,QAAQ,SAAUM,GAC7CX,OAAOY,QAAQ,CAAC,CAAC,2BAA6BD,EAAKE,SAASC,cAAeH,GAAO,CAAC,qCAAuCJ,EAAWM,SAASC,cAAgB,qBAAuBP,EAAWM,SAASC,cAAgB,IAAMH,EAAKE,SAASC,cAAeP,EAAYI,KAEpQA,EAAKI,WAAaC,KAAKC,cAC1BjB,OAAOY,QAAQ,CAAC,CAAC,iCAAmCD,EAAKE,SAASC,cAAeH,GAAO,CAAC,2CAA6CJ,EAAWM,SAASC,cAAgB,wBAA0BP,EAAWM,SAASC,cAAgB,IAAMH,EAAKE,SAASC,cAAeP,EAAYI,QAGvP,eAAxBL,EAAeG,OACzBT,OAAOY,QAAQ,mEAAqEN,EAAea,cAAgB,wBAA0BZ,EAAWM,SAASC,cAAgB,wBAA0BP,EAAWM,SAASC,cAAgB,IAAMR,EAAea,cAAeZ,EAAYD,EAAea,eAE1SZ,EAAWQ,WAAaC,KAAKC,cAChCjB,OAAOY,QAAQ,4EAA8EN,EAAea,cAAgB,2BAA6BZ,EAAWM,SAASC,cAAgB,2BAA6BP,EAAWM,SAASC,cAAgB,IAAMR,EAAea,cAAeZ,EAAYD,EAAea,oBAOlUtB,iBAAiBuB,QAAQC,SAASC,KAAM,CACvCC,YAAY,EACZC,WAAW,EACXC,SAAS,IAGVJ,SAASK,cAAgB,SAAUA,GAClC,OAAO,SAAUC,EAASC,GACzB,IAAIC,EAAUH,EAAcI,KAAKC,KAAMJ,EAASC,GAEhD,OADA5B,OAAOY,QAAQ,iCAAmCiB,EAAQhB,SAASC,cAAee,GAC3EA,GAJgB,CAMvBR,SAASK","file":"mutationobserver.min.js","sourcesContent":["'use strict';\n\n/* global eventProperties */\n\n/* exported mutationObserver */\nvar mutationObserver = new MutationObserver(function (mutationsList) {\n\tif (!window.hasOwnProperty('trigger') && eventProperties) {\n\t\tObject.defineProperties(window, eventProperties);\n\t}\n\n\tif (window.hasOwnProperty('trigger')) {\n\t\tmutationsList.forEach(function (mutationRecord) {\n\t\t\tvar targetNode = mutationRecord.target;\n\t\t\tif (mutationRecord.type === 'childList') {\n\t\t\t\tmutationRecord.addedNodes.forEach(function (node) {\n\t\t\t\t\twindow.trigger([['nodeadded nodeadded:' + node.nodeName.toUpperCase(), node], ['childnodeadded childnodeadded:' + targetNode.nodeName.toUpperCase() + ' childnodeadded:' + targetNode.nodeName.toUpperCase() + ':' + node.nodeName.toUpperCase(), targetNode, node]]);\n\n\t\t\t\t\tif (node.nodeType === Node.ELEMENT_NODE) {\n\t\t\t\t\t\twindow.trigger([['elementadded elementadded:' + node.nodeName.toUpperCase(), node], ['childelementadded childelementadded:' + targetNode.nodeName.toUpperCase() + ' childelementadded:' + targetNode.nodeName.toUpperCase() + ':' + node.nodeName.toUpperCase(), targetNode, node]]);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmutationRecord.removedNodes.forEach(function (node) {\n\t\t\t\t\twindow.trigger([['noderemoved noderemoved:' + node.nodeName.toUpperCase(), node], ['childnoderemoved childnoderemoved:' + targetNode.nodeName.toUpperCase() + ' childnoderemoved:' + targetNode.nodeName.toUpperCase() + ':' + node.nodeName.toUpperCase(), targetNode, node]]);\n\n\t\t\t\t\tif (node.nodeType === Node.ELEMENT_NODE) {\n\t\t\t\t\t\twindow.trigger([['elementremoved elementremoved:' + node.nodeName.toUpperCase(), node], ['childelementremoved childelementremoved:' + targetNode.nodeName.toUpperCase() + ' childelementremoved:' + targetNode.nodeName.toUpperCase() + ':' + node.nodeName.toUpperCase(), targetNode, node]]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (mutationRecord.type === 'attributes') {\n\t\t\t\twindow.trigger('nodeattributechange nodeattributechange:* nodeattributechange:*:' + mutationRecord.attributeName + ' nodeattributechange:' + targetNode.nodeName.toUpperCase() + ' nodeattributechange:' + targetNode.nodeName.toUpperCase() + ':' + mutationRecord.attributeName, targetNode, mutationRecord.attributeName);\n\n\t\t\t\tif (targetNode.nodeType === Node.ELEMENT_NODE) {\n\t\t\t\t\twindow.trigger('elementattributechange elementattributechange:* elementattributechange:*:' + mutationRecord.attributeName + ' elementattributechange:' + targetNode.nodeName.toUpperCase() + ' elementattributechange:' + targetNode.nodeName.toUpperCase() + ':' + mutationRecord.attributeName, targetNode, mutationRecord.attributeName);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nmutationObserver.observe(document.body, {\n\tattributes: true,\n\tchildList: true,\n\tsubtree: true\n});\n\ndocument.createElement = function (createElement) {\n\treturn function (tagName, options) {\n\t\tvar element = createElement.call(this, tagName, options);\n\t\twindow.trigger('elementcreated elementcreated:' + element.nodeName.toUpperCase(), element);\n\t\treturn element;\n\t};\n}(document.createElement);"]}